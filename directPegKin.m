function [A1,A2,A3,A4,A5,Aeq] = directPegKin(Q,L)
L1=L(1);L2=L(2);L3=L(3);L4=L(4);
theta1=Q(1);theta2=Q(2);theta3=Q(3);theta4=Q(4);theta5=Q(5);
A1 = [cos(theta1) 0 sin(theta1) 0; sin(theta1) 0 -cos(theta1) 0; 0 1 0 L1; 0 0 0 1;];
A2 = [cos(theta2) -sin(theta2) 0 L2 * cos(theta2); sin(theta2) cos(theta2) 0 L2 * sin(theta2); 0 0 1 0; 0 0 0 1;];
A3 = [cos(theta3) -sin(theta3) 0 L3 * cos(theta3); sin(theta3) cos(theta3) 0 L3 * sin(theta3); 0 0 1 0; 0 0 0 1;];
A4 = [sin(theta4) 0 cos(theta4) 0; -cos(theta4) 0 sin(theta4) 0; 0 -1 0 0; 0 0 0 1;];
A5 = [cos(theta5) -sin(theta5) 0 0; sin(theta5) cos(theta5) 0 0; 0 0 1 L4; 0 0 0 1;];
Aeq = [((cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) - (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * sin(theta2) * cos(theta3)) * cos(theta4)) * cos(theta5) - sin(theta1) * sin(theta5) -((cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) - (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * sin(theta2) * cos(theta3)) * cos(theta4)) * sin(theta5) - sin(theta1) * cos(theta5) (cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * cos(theta4) + (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * sin(theta2) * cos(theta3)) * sin(theta4) ((cos(theta1) * cos(theta2) * cos(theta3) - cos(theta1) * sin(theta2) * sin(theta3)) * cos(theta4) + (-cos(theta1) * cos(theta2) * sin(theta3) - cos(theta1) * sin(theta2) * cos(theta3)) * sin(theta4)) * L4 + cos(theta1) * cos(theta2) * L3 * cos(theta3) - cos(theta1) * sin(theta2) * L3 * sin(theta3) + cos(theta1) * L2 * cos(theta2); ((sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) - (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * sin(theta2) * cos(theta3)) * cos(theta4)) * cos(theta5) + cos(theta1) * sin(theta5) -((sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * sin(theta4) - (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * sin(theta2) * cos(theta3)) * cos(theta4)) * sin(theta5) + cos(theta1) * cos(theta5) (sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * cos(theta4) + (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * sin(theta2) * cos(theta3)) * sin(theta4) ((sin(theta1) * cos(theta2) * cos(theta3) - sin(theta1) * sin(theta2) * sin(theta3)) * cos(theta4) + (-sin(theta1) * cos(theta2) * sin(theta3) - sin(theta1) * sin(theta2) * cos(theta3)) * sin(theta4)) * L4 + sin(theta1) * cos(theta2) * L3 * cos(theta3) - sin(theta1) * sin(theta2) * L3 * sin(theta3) + sin(theta1) * L2 * cos(theta2); ((sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) * sin(theta4) - (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) * cos(theta4)) * cos(theta5) -((sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) * sin(theta4) - (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) * cos(theta4)) * sin(theta5) (sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) * cos(theta4) + (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) * sin(theta4) ((sin(theta2) * cos(theta3) + cos(theta2) * sin(theta3)) * cos(theta4) + (-sin(theta2) * sin(theta3) + cos(theta2) * cos(theta3)) * sin(theta4)) * L4 + sin(theta2) * L3 * cos(theta3) + cos(theta2) * L3 * sin(theta3) + L2 * sin(theta2) + L1; 0 0 0 1;];
end